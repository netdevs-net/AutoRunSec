apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ars-database
  namespace: ars
  labels:
    app.kubernetes.io/name: ars-database
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: ars
spec:
  serviceName: ars-database
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ars-database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ars-database
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: ars
    spec:
      serviceAccountName: ars-service-account
      securityContext:
        fsGroup: 999
      containers:
      - name: postgres
        image: postgres:13
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: ars
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: ars-db-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ars-db-secret
              key: password
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        resources:
          limits:
            cpu: "1"
            memory: "2Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres"]
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres"]
          initialDelaySeconds: 5
          periodSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard"
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: ars-database
  namespace: ars
  labels:
    app.kubernetes.io/name: ars-database
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: ars
spec:
  ports:
  - port: 5432
    name: postgres
  clusterIP: None
  selector:
    app.kubernetes.io/name: ars-database
