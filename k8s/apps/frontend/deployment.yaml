apiVersion: apps/v1
kind: Deployment
metadata:
  name: ars-frontend
  namespace: ars
  labels:
    app.kubernetes.io/name: ars-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: ars
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ars-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ars-frontend
        app.kubernetes.io/component: frontend
        app.kubernetes.io/part-of: ars
    spec:
      serviceAccountName: ars-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: ars-frontend
        image: ars-frontend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        readinessProbe:
          httpGet:
            path: /readyz
            port: http
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        env:
        - name: NODE_ENV
          value: production
        - name: API_URL
          value: "http://ars-backend.ars.svc.cluster.local:8080"
---
apiVersion: v1
kind: Service
metadata:
  name: ars-frontend
  namespace: ars
  labels:
    app.kubernetes.io/name: ars-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: ars
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: ars-frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ars-frontend
  namespace: ars
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - ars.example.com
    secretName: ars-tls
  rules:
  - host: ars.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ars-frontend
            port:
              number: 80
