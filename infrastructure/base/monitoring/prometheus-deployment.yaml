apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: ars
  labels:
    app: prometheus
    component: server
spec:
  serviceName: prometheus
  replicas: 1 # Only one Prometheus pod for the node
  selector:
    matchLabels:
      app: prometheus
      component: server
  template:
    metadata:
      labels:
        app: prometheus
        component: server
    spec:
      securityContext:
        fsGroup: 2000
        runAsUser: 1000
        runAsGroup: 2000
        runAsNonRoot: true
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.console.libraries=/usr/share/prometheus/console_libraries'
          - '--web.console.templates=/usr/share/prometheus/consoles'
          - '--web.enable-lifecycle'
          - '--storage.tsdb.retention.time=30d'
          - '--storage.tsdb.retention.size=10GB'
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 200m
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        ports:
        - containerPort: 9090
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: prometheus-storage
          mountPath: /prometheus
          readOnly: false
      serviceAccountName: monitoring-prometheus
      volumes:
      - name: config
        configMap:
          name: prometheus-config
  volumeClaimTemplates:
  - metadata:
      name: prometheus-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
# Only one PVC will be created due to replicas: 1
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: ars
  labels:
    app: prometheus
    component: server
spec:
  type: NodePort
  ports:
  - port: 9090
    targetPort: 9090
  selector:
    app: prometheus
    component: server
